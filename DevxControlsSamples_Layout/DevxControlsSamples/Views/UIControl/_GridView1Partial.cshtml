@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "gvUIControls";
        settings.CallbackRouteValues = new { Controller = "UIControl", Action = "GridView1Partial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "UIControl", Action = "GridView1PartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "UIControl", Action = "GridView1PartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "UIControl", Action = "GridView1PartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "ControlId";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = false;
        settings.SettingsCommandButton.RenderMode = GridCommandButtonRenderMode.Link;
        //settings.SettingsCommandButton.NewButton.Text = "<i class='fa fa-plus'></i>";
        settings.SettingsCommandButton.EditButton.Text = "<i class='fa fa-edit'></i>";
        settings.SettingsCommandButton.DeleteButton.Text = "<i class='fa fa-trash'></i>";

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.CommandColumn.CellStyle.CssClass = "action-col-header";
        settings.Columns.Add(column =>
        {
            column.FieldName = "ControlName";
            column.Caption = "Control Name";
            column.Width = 200;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Type";
            column.Caption = "Type";
            column.Width = 200;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Value";
            column.Caption = "Value";
            column.Width = 200;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Label";
            column.Caption = "Label";
            column.Width = 200;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Display";
            column.Caption = "Display";
            column.Width = 200;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "CustomClass";
            column.Caption = "Custom Class";
            column.Width = 200;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Mandatory";
            column.Caption = "Mandatory?";
            column.Width = 80;

            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });

    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()